{"ast":null,"code":"var _jsxFileName = \"/Users/rigpeawangchuk/Desktop/project_ada/team/src/pages/TasksPage/TasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TasksPage.css';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskHours, setNewTaskHours] = useState(0);\n  const [newTaskMinutes, setNewTaskMinutes] = useState(0);\n  const {\n    user\n  } = useAuth0();\n  const addPoints = async points => {\n    try {\n      await fetch('http://localhost:8080/add_points', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: user.sub,\n          points: points\n        })\n      });\n    } catch (error) {\n      console.error('Error adding points:', error);\n    }\n  };\n  const addTask = () => {\n    if (newTask) {\n      const taskMinutes = parseInt(newTaskMinutes, 10);\n      const taskPoints = taskMinutes * 5; // Each minute is worth 5 points\n      setTasks([...tasks, {\n        description: newTask,\n        hours: parseInt(newTaskHours, 10),\n        minutes: taskMinutes,\n        points: taskPoints,\n        timerId: null\n      }]);\n      setNewTask('');\n      setNewTaskHours(0);\n      setNewTaskMinutes(0);\n    }\n  };\n  const startTimer = taskIndex => {\n    let task = tasks[taskIndex];\n    let totalSeconds = task.hours * 3600 + task.minutes * 60;\n    if (task.timerId) {\n      clearInterval(task.timerId);\n    }\n    const timerId = setInterval(() => {\n      totalSeconds -= 1;\n      if (totalSeconds <= 0) {\n        clearInterval(timerId);\n        alert(`Time's up for: ${task.description}`);\n        addPoints(task.points); // Add points when timer reaches zero\n        setTasks(tasks.map((t, index) => index === taskIndex ? {\n          ...t,\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        } : t));\n      } else {\n        const updatedHours = Math.floor(totalSeconds / 3600);\n        const updatedMinutes = Math.floor(totalSeconds % 3600 / 60);\n        setTasks(tasks.map((t, index) => index === taskIndex ? {\n          ...t,\n          hours: updatedHours,\n          minutes: updatedMinutes\n        } : t));\n      }\n    }, 1000);\n    setTasks(tasks.map((t, index) => index === taskIndex ? {\n      ...t,\n      timerId\n    } : t));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasksPageContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-list\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [task.description, \" - \", task.hours, \"h \", task.minutes, \"m - \", task.points, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startTimer(index),\n          children: \"Start Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"uABzsXUO3iHZkHlSb/zRtENTUtc=\", false, function () {\n  return [useAuth0];\n});\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useState","useAuth0","jsxDEV","_jsxDEV","TasksPage","_s","tasks","setTasks","newTask","setNewTask","newTaskHours","setNewTaskHours","newTaskMinutes","setNewTaskMinutes","user","addPoints","points","fetch","method","headers","body","JSON","stringify","user_id","sub","error","console","addTask","taskMinutes","parseInt","taskPoints","description","hours","minutes","timerId","startTimer","taskIndex","task","totalSeconds","clearInterval","setInterval","alert","map","t","index","seconds","updatedHours","Math","floor","updatedMinutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/rigpeawangchuk/Desktop/project_ada/team/src/pages/TasksPage/TasksPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TasksPage.css';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst TasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskHours, setNewTaskHours] = useState(0);\n  const [newTaskMinutes, setNewTaskMinutes] = useState(0);\n  const { user } = useAuth0();\n\n  const addPoints = async (points) => {\n    try {\n      await fetch('http://localhost:8080/add_points', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ user_id: user.sub, points: points })\n      });\n    } catch (error) {\n      console.error('Error adding points:', error);\n    }\n  };\n\n  const addTask = () => {\n    if (newTask) {\n      const taskMinutes = parseInt(newTaskMinutes, 10);\n      const taskPoints = taskMinutes * 5; // Each minute is worth 5 points\n      setTasks([...tasks, {\n        description: newTask,\n        hours: parseInt(newTaskHours, 10),\n        minutes: taskMinutes,\n        points: taskPoints,\n        timerId: null\n      }]);\n      setNewTask('');\n      setNewTaskHours(0);\n      setNewTaskMinutes(0);\n    }\n  };\n\n  const startTimer = (taskIndex) => {\n    let task = tasks[taskIndex];\n    let totalSeconds = task.hours * 3600 + task.minutes * 60;\n\n    if (task.timerId) {\n      clearInterval(task.timerId);\n    }\n\n    const timerId = setInterval(() => {\n      totalSeconds -= 1;\n      if (totalSeconds <= 0) {\n        clearInterval(timerId);\n        alert(`Time's up for: ${task.description}`);\n        addPoints(task.points); // Add points when timer reaches zero\n        setTasks(tasks.map((t, index) => index === taskIndex ? { ...t, hours: 0, minutes: 0, seconds: 0 } : t));\n      } else {\n        const updatedHours = Math.floor(totalSeconds / 3600);\n        const updatedMinutes = Math.floor((totalSeconds % 3600) / 60);\n        setTasks(tasks.map((t, index) => index === taskIndex ? { ...t, hours: updatedHours, minutes: updatedMinutes } : t));\n      }\n    }, 1000);\n\n    setTasks(tasks.map((t, index) => index === taskIndex ? { ...t, timerId } : t));\n  };\n\n  return (\n    <div className=\"tasksPageContainer\">\n      {/* Existing Navbar and Task Form */}\n      <div className=\"tasks-list\">\n        {tasks.map((task, index) => (\n          <div key={index} className=\"task\">\n            <span>{task.description} - {task.hours}h {task.minutes}m - {task.points} points</span>\n            <button onClick={() => startTimer(index)}>Start Timer</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TasksPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}