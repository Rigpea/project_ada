{"ast":null,"code":"var _jsxFileName = \"/Users/rigpeawangchuk/Desktop/project_ada/team/src/pages/RegistrationPage/RegistrationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationPage = () => {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [formData, setFormData] = useState({\n    auth0_id: '',\n    // Will be set after user is authenticated\n    email: '',\n    // Will be set after user is authenticated\n    hobbies: '[]',\n    // Initialize as an empty JSON array string\n    tasks: '[]',\n    // Initialize as an empty JSON array string\n    emoji: '',\n    date_of_birth: '' // Name changed to match database schema\n  });\n\n  // Set auth0_id and email once the user is authenticated and data is available\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      setFormData({\n        ...formData,\n        auth0_id: user.sub,\n        email: user.email\n      });\n    }\n  }, [user, isAuthenticated]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Prepare data to match the database schema\n    const dataToSend = {\n      ...formData,\n      hobbies: JSON.stringify(formData.hobbies.split(',').map(hobby => hobby.trim())),\n      // Convert comma-separated string to JSON array\n      tasks: JSON.stringify(formData.tasks.split(',').map(task => task.trim())),\n      // Convert comma-separated string to JSON array\n      date_of_birth: formData.date_of_birth // Ensure date format is correct (YYYY-MM-DD)\n    };\n\n    try {\n      const response = await fetch('http://localhost:8080/add_user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataToSend)\n      });\n      const data = await response.json();\n      console.log(data.message);\n      // Redirect or display success message\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      // Handle the error\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"displayName\",\n      value: formData.displayName,\n      onChange: handleChange,\n      placeholder: \"Display Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"dateOfBirth\",\n      value: formData.dateOfBirth,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"hobbies\",\n      value: formData.hobbies,\n      onChange: handleChange,\n      placeholder: \"Hobbies (comma-seperated)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"emoji\",\n      value: formData.emoji,\n      onChange: handleChange,\n      placeholder: \"Emoji\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationPage, \"kQeakslz8a7aQwp3Zu8G9bgMtzI=\", false, function () {\n  return [useAuth0];\n});\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth0","jsxDEV","_jsxDEV","RegistrationPage","_s","user","isAuthenticated","formData","setFormData","auth0_id","email","hobbies","tasks","emoji","date_of_birth","sub","handleChange","e","target","name","value","handleSubmit","preventDefault","dataToSend","JSON","stringify","split","map","hobby","trim","task","response","fetch","method","headers","body","data","json","console","log","message","error","onSubmit","children","type","displayName","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","dateOfBirth","_c","$RefreshReg$"],"sources":["/Users/rigpeawangchuk/Desktop/project_ada/team/src/pages/RegistrationPage/RegistrationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst RegistrationPage = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [formData, setFormData] = useState({\n    auth0_id: '',  // Will be set after user is authenticated\n    email: '',     // Will be set after user is authenticated\n    hobbies: '[]', // Initialize as an empty JSON array string\n    tasks: '[]',   // Initialize as an empty JSON array string\n    emoji: '',\n    date_of_birth: '' // Name changed to match database schema\n  });\n\n  // Set auth0_id and email once the user is authenticated and data is available\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      setFormData({\n        ...formData,\n        auth0_id: user.sub,\n        email: user.email\n      });\n    }\n  }, [user, isAuthenticated]);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Prepare data to match the database schema\n    const dataToSend = {\n      ...formData,\n      hobbies: JSON.stringify(formData.hobbies.split(',').map(hobby => hobby.trim())), // Convert comma-separated string to JSON array\n      tasks: JSON.stringify(formData.tasks.split(',').map(task => task.trim())),      // Convert comma-separated string to JSON array\n      date_of_birth: formData.date_of_birth // Ensure date format is correct (YYYY-MM-DD)\n    };\n    try {\n      const response = await fetch('http://localhost:8080/add_user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataToSend)\n      });\n      const data = await response.json();\n      console.log(data.message);\n      // Redirect or display success message\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      // Handle the error\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\" \n        name=\"displayName\"\n        value={formData.displayName} \n        onChange={handleChange}\n        placeholder=\"Display Name\"\n      />\n      <input \n        type=\"date\" \n        name=\"dateOfBirth\"\n        value={formData.dateOfBirth} \n        onChange={handleChange}\n      />\n      <input \n        type=\"text\" \n        name=\"hobbies\"\n        value={formData.hobbies} \n        onChange={handleChange}\n        placeholder=\"Hobbies (comma-seperated)\"\n      />\n      <input\n        type=\"text\"\n        name=\"emoji\"\n        value={formData.emoji}\n        onChange={handleChange}\n        placeholder=\"Emoji\"\n      />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default RegistrationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}