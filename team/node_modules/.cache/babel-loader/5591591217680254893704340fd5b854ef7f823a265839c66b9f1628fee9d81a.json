{"ast":null,"code":"var _jsxFileName = \"/Users/rigpeawangchuk/Desktop/project_ada/team/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport LoggedInPage from './pages/LoggedInPage/LoggedInPage';\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\n\n// This is a mock function to check if the user is authenticated\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // Replace with your actual logic to check for a token or user session\n  const token = localStorage.getItem('userToken');\n  return Boolean(token);\n};\n\n// A component to protect routes that require authentication\nconst ProtectedRoute = ({\n  children\n}) => {\n  if (!isAuthenticated()) {\n    // If the user is not authenticated, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignupPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/loggedIn\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(LoggedInPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profilepage\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","HomePage","LoginPage","SignupPage","LoggedInPage","ProfilePage","jsxDEV","_jsxDEV","isAuthenticated","token","localStorage","getItem","Boolean","ProtectedRoute","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","path","element","_c2","$RefreshReg$"],"sources":["/Users/rigpeawangchuk/Desktop/project_ada/team/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport LoggedInPage from './pages/LoggedInPage/LoggedInPage';\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\n\n// This is a mock function to check if the user is authenticated\nconst isAuthenticated = () => {\n  // Replace with your actual logic to check for a token or user session\n  const token = localStorage.getItem('userToken');\n  return Boolean(token);\n};\n\n// A component to protect routes that require authentication\nconst ProtectedRoute = ({ children }) => {\n  if (!isAuthenticated()) {\n    // If the user is not authenticated, redirect to the login page\n    return <Navigate to=\"/login\" />;\n  }\n  return children;\n};\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/login\" element={<LoginPage />} />\n        <Route path=\"/signup\" element={<SignupPage />} />\n        <Route\n          path=\"/loggedIn\"\n          element={\n            <ProtectedRoute>\n              <LoggedInPage />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/profilepage\"\n          element={\n            <ProtectedRoute>\n              <ProfilePage />\n            </ProtectedRoute>\n          }\n        />\n        {/* Add other routes here */}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}