{"ast":null,"code":"var _jsxFileName = \"/Users/rigpeawangchuk/Desktop/project_ada/team/src/pages/TasksPage/TasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth0();\n  const [task, setTask] = useState('');\n  const [time, setTime] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const handleAddTask = () => {\n    if (task && time && !isNaN(time)) {\n      setTasks([...tasks, {\n        task,\n        time: parseInt(time),\n        isStarted: false\n      }]);\n      setTask('');\n      setTime('');\n    }\n  };\n  const startTimer = index => {\n    setTasks(tasks.map((t, i) => {\n      if (i === index) {\n        t.isStarted = true;\n        // Start a countdown\n        const timer = setInterval(() => {\n          if (t.time > 0) {\n            setTasks(currentTasks => currentTasks.map((item, idx) => {\n              if (idx === index) {\n                return {\n                  ...item,\n                  time: item.time - 1\n                };\n              }\n              return item;\n            }));\n          } else {\n            clearInterval(timer);\n            // Add a point\n            addPoint();\n          }\n        }, 1000);\n      }\n      return t;\n    }));\n  };\n  const addPoint = async () => {\n    if (user && user.sub) {\n      await fetch('http://localhost:8080/add_points', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: user.sub\n        })\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: task,\n      onChange: e => setTask(e.target.value),\n      placeholder: \"Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: time,\n      onChange: e => setTime(e.target.value),\n      placeholder: \"Time in minutes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks.map((t, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [t.task, \" - \", t.time, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), !t.isStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startTimer(index),\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 30\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"1BRT8sY5z6XTuOkUw0UjDIekT58=\", false, function () {\n  return [useAuth0];\n});\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useState","useAuth0","jsxDEV","_jsxDEV","TasksPage","_s","user","task","setTask","time","setTime","tasks","setTasks","handleAddTask","isNaN","parseInt","isStarted","startTimer","index","map","t","i","timer","setInterval","currentTasks","item","idx","clearInterval","addPoint","sub","fetch","method","headers","body","JSON","stringify","user_id","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/rigpeawangchuk/Desktop/project_ada/team/src/pages/TasksPage/TasksPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst TasksPage = () => {\n  const { user } = useAuth0();\n  const [task, setTask] = useState('');\n  const [time, setTime] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  const handleAddTask = () => {\n    if (task && time && !isNaN(time)) {\n      setTasks([...tasks, { task, time: parseInt(time), isStarted: false }]);\n      setTask('');\n      setTime('');\n    }\n  };\n\n  const startTimer = (index) => {\n    setTasks(tasks.map((t, i) => {\n      if (i === index) {\n        t.isStarted = true;\n        // Start a countdown\n        const timer = setInterval(() => {\n          if (t.time > 0) {\n            setTasks(currentTasks => currentTasks.map((item, idx) => {\n              if (idx === index) {\n                return { ...item, time: item.time - 1 };\n              }\n              return item;\n            }));\n          } else {\n            clearInterval(timer);\n            // Add a point\n            addPoint();\n          }\n        }, 1000);\n      }\n      return t;\n    }));\n  };\n\n  const addPoint = async () => {\n    if (user && user.sub) {\n      await fetch('http://localhost:8080/add_points', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ user_id: user.sub })\n      });\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={task} onChange={(e) => setTask(e.target.value)} placeholder=\"Task\"/>\n      <input type=\"text\" value={time} onChange={(e) => setTime(e.target.value)} placeholder=\"Time in minutes\"/>\n      <button onClick={handleAddTask}>Add Task</button>\n\n      <div>\n        {tasks.map((t, index) => (\n          <div key={index}>\n            <p>{t.task} - {t.time} minutes</p>\n            {!t.isStarted && <button onClick={() => startTimer(index)}>Start</button>}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TasksPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}