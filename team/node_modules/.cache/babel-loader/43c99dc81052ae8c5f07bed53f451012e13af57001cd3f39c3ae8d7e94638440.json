{"ast":null,"code":"var _jsxFileName = \"/Users/duartealbuquerque/Desktop/project_ada/team/src/components/gpt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './gpt.css'; // Import corresponding CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [recommendation, setRecommendation] = useState('');\n  const processInput = useCallback(async () => {\n    try {\n      const response = await fetch('/generate_schedule', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userInput\n        }) // Update to match the property name\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRecommendation(data.result); // Assuming schedule is the property you want to display\n    } catch (error) {\n      console.error('Error fetching recommendation:', error);\n    }\n  }, [userInput]); // Include userInput in the dependency array\n\n  useEffect(() => {\n    const effect = async () => {\n      await processInput(); // Call the function on component mount\n    };\n\n    effect();\n    return () => {\n      // Cleanup logic if needed\n    };\n  }, [userInput, processInput]); // Include processInput in the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gpt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-textbox\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      placeholder: \"Please enter your goals here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: processInput,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"output-textbox\",\n      value: recommendation,\n      readOnly: true,\n      placeholder: \"Your personalized schedule will appear here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"onS86/uW8Br0Rnp5IyST4b2QCdI=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Recommendations","_s","userInput","setUserInput","recommendation","setRecommendation","processInput","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","result","error","console","effect","className","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","readOnly","_c","$RefreshReg$"],"sources":["/Users/duartealbuquerque/Desktop/project_ada/team/src/components/gpt.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './gpt.css'; // Import corresponding CSS file\n\nconst Recommendations = () => {\n  const [userInput, setUserInput] = useState('');\n  const [recommendation, setRecommendation] = useState('');\n\n  const processInput = useCallback(async () => {\n    try {\n      const response = await fetch('/generate_schedule', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ userInput }), // Update to match the property name\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setRecommendation(data.result); // Assuming schedule is the property you want to display\n    } catch (error) {\n      console.error('Error fetching recommendation:', error);\n    }\n  }, [userInput]); // Include userInput in the dependency array\n\n  useEffect(() => {\n    const effect = async () => {\n      await processInput(); // Call the function on component mount\n    };\n\n    effect();\n\n    return () => {\n      // Cleanup logic if needed\n    };\n  }, [userInput, processInput]); // Include processInput in the dependency array\n\n  return (\n    <div className=\"gpt-container\">\n      <textarea\n        className=\"input-textbox\"\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        placeholder=\"Please enter your goals here\"\n      />\n      <button className=\"submit-button\" onClick={processInput}>Submit</button>\n      <textarea\n        className=\"output-textbox\"\n        value={recommendation}\n        readOnly\n        placeholder=\"Your personalized schedule will appear here\"\n      />\n    </div>\n  );\n};\n\nexport default Recommendations;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMW,YAAY,GAAGT,WAAW,CAAC,YAAY;IAC3C,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;QACjDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAU,CAAC,CAAC,CAAE;MACvC,CAAC,CAAC;;MAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCb,iBAAiB,CAACY,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjBN,SAAS,CAAC,MAAM;IACd,MAAM0B,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMhB,YAAY,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;;IAEDgB,MAAM,CAAC,CAAC;IAER,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,CAACpB,SAAS,EAAEI,YAAY,CAAC,CAAC,CAAC,CAAC;;EAE/B,oBACEP,OAAA;IAAKwB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BzB,OAAA;MACEwB,SAAS,EAAC,eAAe;MACzBE,KAAK,EAAEvB,SAAU;MACjBwB,QAAQ,EAAGC,CAAC,IAAKxB,YAAY,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,WAAW,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFlC,OAAA;MAAQwB,SAAS,EAAC,eAAe;MAACW,OAAO,EAAE5B,YAAa;MAAAkB,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxElC,OAAA;MACEwB,SAAS,EAAC,gBAAgB;MAC1BE,KAAK,EAAErB,cAAe;MACtB+B,QAAQ;MACRN,WAAW,EAAC;IAA6C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChC,EAAA,CAtDID,eAAe;AAAAoC,EAAA,GAAfpC,eAAe;AAwDrB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}