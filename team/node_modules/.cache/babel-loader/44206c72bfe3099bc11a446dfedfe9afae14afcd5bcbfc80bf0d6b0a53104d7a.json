{"ast":null,"code":"var _jsxFileName = \"/Users/duartealbuquerque/Desktop/project_ada/team/src/components/gpt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './gpt.css'; // Import corresponding CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [recommendation, setRecommendation] = useState('');\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post('/generate_schedule', {\n        user_input: userInput\n      });\n      setSchedule(response.data);\n    } catch (error) {\n      console.error('Error fetching schedule', error);\n    }\n  };\n  useEffect(() => {\n    const processInput = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/gpt', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_input: userInput\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setRecommendation(data);\n      } catch (error) {\n        console.error('Error fetching recommendation:', error);\n      }\n    };\n    document.getElementById('userInput').addEventListener('input', processInput);\n    return () => {\n      document.getElementById('userInput').removeEventListener('input', processInput);\n    };\n  }, [userInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gpt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-textbox\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      placeholder: \"Enter your hobbies or interests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"output-textbox\",\n      value: schedule,\n      readOnly: true,\n      placeholder: \"Your personalized schedule will appear here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"ZHzx9A7eRN4CB2Rl74VabHHtIkg=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Recommendations","_s","userInput","setUserInput","recommendation","setRecommendation","handleSubmit","response","axios","post","user_input","setSchedule","data","error","console","processInput","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","document","getElementById","addEventListener","removeEventListener","className","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","schedule","readOnly","_c","$RefreshReg$"],"sources":["/Users/duartealbuquerque/Desktop/project_ada/team/src/components/gpt.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './gpt.css'; // Import corresponding CSS file\n\nconst Recommendations = () => {\n  const [userInput, setUserInput] = useState('');\n  const [recommendation, setRecommendation] = useState('');\n\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post('/generate_schedule', { user_input: userInput });\n      setSchedule(response.data);\n    } catch (error) {\n      console.error('Error fetching schedule', error);\n    }\n  };\n\n  useEffect(() => {\n    const processInput = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/gpt', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ user_input: userInput }),\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setRecommendation(data);\n      } catch (error) {\n        console.error('Error fetching recommendation:', error);\n      }\n    };\n\n    document.getElementById('userInput').addEventListener('input', processInput);\n\n    return () => {\n      document.getElementById('userInput').removeEventListener('input', processInput);\n    };\n  }, [userInput]);\n\n  return (\n    <div className=\"gpt-container\">\n      <textarea\n        className=\"input-textbox\"\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        placeholder=\"Enter your hobbies or interests\"\n      />\n      <button className=\"submit-button\" onClick={handleSubmit}>Submit</button>\n      <textarea\n        className=\"output-textbox\"\n        value={schedule}\n        readOnly\n        placeholder=\"Your personalized schedule will appear here\"\n      />\n    </div>\n  );\n};\n\nexport default Recommendations;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}