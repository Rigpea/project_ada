{"ast":null,"code":"var _jsxFileName = \"/Users/rigpeawangchuk/Desktop/project_ada/team/src/pages/RegistrationPage/RegistrationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationPage = () => {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async () => {\n    setIsSubmitting(true); // Indicate that submission is in progress\n    try {\n      const response = await fetch('http://localhost:8080/add_basic_user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: user.sub,\n          // Use 'user_id' to match the expected parameter in your SQL statement\n          email: user.email\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.message);\n        navigate('/loggedIn'); // Redirect to the loggedIn page\n      } else {\n        throw new Error('Failed to register');\n      }\n    } catch (error) {\n      console.error('Error submitting user info:', error);\n    } finally {\n      setIsSubmitting(false); // Indicate that submission is done\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isAuthenticated && !isSubmitting ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isSubmitting ? 'Submitting...' : 'Please log in to register.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationPage, \"rFnaxA3J0gF5Ga+kMc8nBSOiKRo=\", false, function () {\n  return [useAuth0, useNavigate];\n});\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","useAuth0","useNavigate","jsxDEV","_jsxDEV","RegistrationPage","_s","user","isAuthenticated","isSubmitting","setIsSubmitting","navigate","handleSubmit","response","fetch","method","headers","body","JSON","stringify","user_id","sub","email","ok","data","json","console","log","message","Error","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rigpeawangchuk/Desktop/project_ada/team/src/pages/RegistrationPage/RegistrationPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { useNavigate } from 'react-router-dom';\n\nconst RegistrationPage = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async () => {\n    setIsSubmitting(true); // Indicate that submission is in progress\n    try {\n      const response = await fetch('http://localhost:8080/add_basic_user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: user.sub, // Use 'user_id' to match the expected parameter in your SQL statement\n          email: user.email\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.message);\n        navigate('/loggedIn'); // Redirect to the loggedIn page\n      } else {\n        throw new Error('Failed to register');\n      }\n    } catch (error) {\n      console.error('Error submitting user info:', error);\n    } finally {\n      setIsSubmitting(false); // Indicate that submission is done\n    }\n  };\n\n  return (\n    <div>\n      {isAuthenticated && !isSubmitting ? (\n        <button onClick={handleSubmit}>\n          Register\n        </button>\n      ) : (\n        <p>{isSubmitting ? 'Submitting...' : 'Please log in to register.'}</p>\n      )}\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC,IAAI;IAAEC;EAAgB,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BF,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEb,IAAI,CAACc,GAAG;UAAE;UACnBC,KAAK,EAAEf,IAAI,CAACe;QACd,CAAC;MACH,CAAC,CAAC;MACF,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC;QACzBjB,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM;QACL,MAAM,IAAIkB,KAAK,CAAC,oBAAoB,CAAC;MACvC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,SAAS;MACRpB,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;;EAED,oBACEN,OAAA;IAAA2B,QAAA,EACGvB,eAAe,IAAI,CAACC,YAAY,gBAC/BL,OAAA;MAAQ4B,OAAO,EAAEpB,YAAa;MAAAmB,QAAA,EAAC;IAE/B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEThC,OAAA;MAAA2B,QAAA,EAAItB,YAAY,GAAG,eAAe,GAAG;IAA4B;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EACtE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA3CID,gBAAgB;EAAA,QACcJ,QAAQ,EAEzBC,WAAW;AAAA;AAAAmC,EAAA,GAHxBhC,gBAAgB;AA6CtB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}